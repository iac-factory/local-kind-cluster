apiVersion: v1
kind: Service
metadata:
    name: go-http-api
    labels:
        app: go-http-api
        service: go-http-api
spec:
    selector:
        app: go-http-api
        version: v1
    ports:
        -   port: 8080
            targetPort: 5000
            name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: go-http-api
    labels:
        app: go-http-api
        version: v1
spec:
    replicas: 1
    selector:
        matchLabels:
            app: go-http-api
            version: v1
    template:
        metadata:
            annotations:
                sidecar.istio.io/inject: "true"
            labels:
                app: go-http-api
                version: v1
        spec:
            containers:
                -   name: go-http-api
                    image: localhost:5050/go-http-api:latest
                    resources:
                        requests:
                            cpu: "100m"
                    imagePullPolicy: Always
                    ports:
                        -   containerPort: 5000

#---
#apiVersion: autoscaling/v2
#kind: HorizontalPodAutoscaler
#metadata:
#    name: gateway
#spec:
#    # Match the generated Deployment by reference
#    # Note: Do not use `kind: Gateway`.
#    scaleTargetRef:
#        apiVersion: apps/v1
#        kind: Deployment
#        name: gateway-istio
#    minReplicas: 2
#    maxReplicas: 5
#    metrics:
#        - type: Resource
#          resource:
#              name: cpu
#              target:
#                  type: Utilization
#                  averageUtilization: 50
#---
#apiVersion: policy/v1
#kind: PodDisruptionBudget
#metadata:
#    name: gateway
#spec:
#    minAvailable: 1
#    selector:
#        # Match the generated Deployment by label
#        matchLabels:
#            gateway.networking.k8s.io/gateway-name: gateway
