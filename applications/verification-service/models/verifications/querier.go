// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package verifications

import (
	"context"
)

type Querier interface {
	// Count returns 0 or 1 depending on if a Verification record matching the provided email exists.
	Count(ctx context.Context, db DBTX, email string) (int64, error)
	// Create establishes a new [Verification] database record.
	Create(ctx context.Context, db DBTX, arg *CreateParams) (Verification, error)
	// Delete performs a hard database delete on a [Verification] record.
	Delete(ctx context.Context, db DBTX, id int64) error
	// DeleteByEmail performs a hard database delete on a [Verification] record.
	DeleteByEmail(ctx context.Context, db DBTX, email string) error
	// Get returns a fully hydrated [Verification] database record if a match is found via email.
	Get(ctx context.Context, db DBTX, email string) (Verification, error)
	// Status returns a partially hydrated [Verification] database record only including the user's email and verified attribute(s).
	Status(ctx context.Context, db DBTX, email string) (StatusRow, error)
	// Verify updates the [Verification] database record with a verified state.
	Verify(ctx context.Context, db DBTX, arg *VerifyParams) error
}

var _ Querier = (*Queries)(nil)
